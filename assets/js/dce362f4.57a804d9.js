"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[362],{6810:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>s,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>t});var d=n(4848),i=n(8453);const o={},s=void 0,l={id:"cpp/memory_order",title:"memory_order",description:"memory order",source:"@site/docs/cpp/memory_order.md",sourceDirName:"cpp",slug:"/cpp/memory_order",permalink:"/docs/cpp/memory_order",draft:!1,unlisted:!1,editUrl:"https://github.com/1036-ce/1036-ce.github.io/blob/main/docs/cpp/memory_order.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"little",permalink:"/docs/cpp/little"},next:{title:"mutex",permalink:"/docs/cpp/mutex"}},c={},t=[{value:"memory order",id:"memory-order",level:2},{value:"\u4e3a\u4ec0\u4e48\u9700\u8981memory order",id:"\u4e3a\u4ec0\u4e48\u9700\u8981memory-order",level:3},{value:"Relaxed ordering",id:"relaxed-ordering",level:3},{value:"memory order",id:"memory-order-1",level:3},{value:"Release-Acquire ordering",id:"release-acquire-ordering",level:3},{value:"Release-Consume ordering",id:"release-consume-ordering",level:3},{value:"Sequentially-consistent ordering",id:"sequentially-consistent-ordering",level:3}];function a(e){const r={code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(r.h2,{id:"memory-order",children:"memory order"}),"\n",(0,d.jsx)(r.h3,{id:"\u4e3a\u4ec0\u4e48\u9700\u8981memory-order",children:"\u4e3a\u4ec0\u4e48\u9700\u8981memory order"}),"\n",(0,d.jsx)(r.p,{children:"\u5982\u679c\u4e0d\u4f7f\u7528\u4efb\u4f55\u540c\u6b65\u673a\u5236\uff08\u4f8b\u5982 mutex \u6216 atomic\uff09\uff0c\u5728\u591a\u7ebf\u7a0b\u4e2d\u8bfb\u5199\u540c\u4e00\u4e2a\u53d8\u91cf\uff0c\n\u90a3\u4e48\uff0c\u7a0b\u5e8f\u7684\u7ed3\u679c\u662f\u96be\u4ee5\u9884\u6599\u7684\u3002\u7b80\u5355\u6765\u8bf4\uff0c\u7f16\u8bd1\u5668\u4ee5\u53ca CPU \u7684\u4e00\u4e9b\u884c\u4e3a\uff0c\u4f1a\u5f71\u54cd\u5230\u7a0b\u5e8f\u7684\u6267\u884c\u7ed3\u679c\uff1a"}),"\n",(0,d.jsx)(r.p,{children:"\u5373\u4f7f\u662f\u7b80\u5355\u7684\u8bed\u53e5\uff0cC++ \u4e5f\u4e0d\u4fdd\u8bc1\u662f\u539f\u5b50\u64cd\u4f5c\u3002\nCPU \u53ef\u80fd\u4f1a\u8c03\u6574\u6307\u4ee4\u7684\u6267\u884c\u987a\u5e8f\u3002\n\u5728 CPU cache \u7684\u5f71\u54cd\u4e0b\uff0c\u4e00\u4e2a CPU \u6267\u884c\u4e86\u67d0\u4e2a\u6307\u4ee4\uff0c\u4e0d\u4f1a\u7acb\u5373\u88ab\u5176\u5b83 CPU \u770b\u89c1\u3002"}),"\n",(0,d.jsx)(r.p,{children:"\u539f\u5b50\u64cd\u4f5c\u8bf4\u7684\u662f\uff0c\u4e00\u4e2a\u64cd\u4f5c\u7684\u72b6\u6001\u8981\u4e48\u5c31\u662f\u672a\u6267\u884c\uff0c\u8981\u4e48\u5c31\u662f\u5df2\u5b8c\u6210\uff0c\u4e0d\u4f1a\u770b\u89c1\u4e2d\u95f4\u72b6\u6001\u3002\u4f8b\u5982\uff0c\u5728 C++11 \u4e2d\uff0c\u4e0b\u9762\u7a0b\u5e8f\u7684\u7ed3\u679c\u662f\u672a\u5b9a\u4e49\u7684\uff1a"}),"\n",(0,d.jsx)(r.pre,{children:(0,d.jsx)(r.code,{className:"language-cpp",children:"          int64_t i = 0;     // global variable\nThread-1:              Thread-2:\ni = 100;               std::cout << i;\n"})}),"\n",(0,d.jsx)(r.p,{children:"C++ \u5e76\u4e0d\u4fdd\u8bc1i = 100\u662f\u539f\u5b50\u64cd\u4f5c\uff0c\u56e0\u4e3a\u5728\u67d0\u4e9b CPU Architecture \u4e2d\uff0c\n\u5199\u5165int64_t\u9700\u8981\u4e24\u4e2a CPU \u6307\u4ee4\uff0c\u6240\u4ee5 Thread-2 \u53ef\u80fd\u4f1a\u8bfb\u53d6\u5230i\u5728\u8d4b\u503c\u8fc7\u7a0b\u7684\u4e2d\u95f4\u72b6\u6001\u3002"}),"\n",(0,d.jsx)(r.p,{children:"\u53e6\u4e00\u65b9\u9762\uff0c\u4e3a\u4e86\u4f18\u5316\u7a0b\u5e8f\u7684\u6267\u884c\u6027\u80fd\uff0cCPU \u53ef\u80fd\u4f1a\u8c03\u6574\u6307\u4ee4\u7684\u6267\u884c\u987a\u5e8f\u3002\n\u4e3a\u9610\u8ff0\u8fd9\u4e00\u70b9\uff0c\u4e0b\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u8ba9\u6211\u4eec\u5047\u8bbe\u6240\u6709\u64cd\u4f5c\u90fd\u662f\u539f\u5b50\u64cd\u4f5c\uff1a"}),"\n",(0,d.jsx)(r.pre,{children:(0,d.jsx)(r.code,{children:"          int x = 0;     // global variable\n          int y = 0;     // global variable\n\t\t  \nThread-1:              Thread-2:\nx = 100;               while (y != 200)\ny = 200;                   ;\n                       std::cout << x;\n"})}),"\n",(0,d.jsx)(r.p,{children:"\u5982\u679c CPU \u6ca1\u6709\u4e71\u5e8f\u6267\u884c\u6307\u4ee4\uff0c\u90a3\u4e48 Thread-2 \u5c06\u8f93\u51fa100\u3002\n\u7136\u800c\uff0c\u5bf9\u4e8e Thread-1 \u6765\u8bf4\uff0cx = 100;\u548cy = 200;\u8fd9\u4e24\u4e2a\u8bed\u53e5\u4e4b\u95f4\u6ca1\u6709\u4f9d\u8d56\u5173\u7cfb\uff0c\n\u56e0\u6b64\uff0cThread-1 \u5141\u8bb8\u8c03\u6574\u8bed\u53e5\u7684\u6267\u884c\u987a\u5e8f\uff1a"}),"\n",(0,d.jsx)(r.pre,{children:(0,d.jsx)(r.code,{children:"Thread-1:\ny = 200;\nx = 100;\n"})}),"\n",(0,d.jsx)(r.p,{children:"\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cThread-2 \u5c06\u8f93\u51fa0\u6216100\u3002"}),"\n",(0,d.jsx)(r.p,{children:"CPU cache \u4e5f\u4f1a\u5f71\u54cd\u5230\u7a0b\u5e8f\u7684\u884c\u4e3a\u3002\u4e0b\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u5047\u8bbe\u4ece\u65f6\u95f4\u4e0a\u6765\u8bb2\uff0cA \u64cd\u4f5c\u5148\u4e8e B \u64cd\u4f5c\u53d1\u751f\uff1a"}),"\n",(0,d.jsx)(r.pre,{children:(0,d.jsx)(r.code,{children:"          int x = 0;     // global variable\n\t\t  \nThread-1:                      Thread-2:\nx = 100;    // A               std::cout << x;    // B\n"})}),"\n",(0,d.jsx)(r.p,{children:"\u5c3d\u7ba1\u4ece\u65f6\u95f4\u4e0a\u6765\u8bb2\uff0cA \u5148\u4e8e B\uff0c\u4f46 CPU cache \u7684\u5f71\u54cd\u4e0b\uff0c\nThread-2 \u4e0d\u80fd\u4fdd\u8bc1\u7acb\u5373\u770b\u5230 A \u64cd\u4f5c\u7684\u7ed3\u679c\uff0c\u6240\u4ee5 Thread-2 \u53ef\u80fd\u8f93\u51fa0\u6216100\u3002"}),"\n",(0,d.jsx)(r.h3,{id:"relaxed-ordering",children:"Relaxed ordering"}),"\n",(0,d.jsx)(r.p,{children:"\u5728\u8fd9\u79cd\u6a21\u578b\u4e0b\uff0cstd::atomic\u7684load()\u548cstore()\u90fd\u8981\u5e26\u4e0amemory_order_relaxed\u53c2\u6570\u3002"}),"\n",(0,d.jsx)(r.p,{children:"Relaxed ordering \u4ec5\u4ec5\u4fdd\u8bc1load()\u548cstore()\u662f\u539f\u5b50\u64cd\u4f5c\uff0c\u9664\u6b64\u4e4b\u5916\uff0c\u4e0d\u63d0\u4f9b\u4efb\u4f55\u8de8\u7ebf\u7a0b\u7684\u540c\u6b65\u3002"}),"\n",(0,d.jsx)(r.p,{children:"\u3000\u3000\u5148\u770b\u770b\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff1a"}),"\n",(0,d.jsx)(r.pre,{children:(0,d.jsx)(r.code,{className:"language-cpp",children:"            std::atomic<int> x = 0; \n            std::atomic<int> y = 0;\n\nThread-1:                              \nr1 = y.load(memory_order_relaxed); // A\nx.store(r1, memory_order_relaxed); // B\n\nThread-2:\nr2 = x.load(memory_order_relaxed); // C\ny.store(42, memory_order_relaxed); // D\n"})}),"\n",(0,d.jsx)(r.p,{children:"\u7531\u4e8eA,B,C,D\u56db\u4e2a\u8bed\u53e5\u4e4b\u95f4\u6ca1\u6709\u4efb\u4f55\u4f9d\u8d56\u5173\u7cfb\uff0c\u7f16\u8bd1\u5668\u53ef\u4ee5\u91cd\u6392\u4ed6\u4eec\u7684\u6267\u884c\u987a\u5e8f"}),"\n",(0,d.jsxs)(r.p,{children:["\u5728D->A->B->C \u987a\u5e8f\u4e0b\uff0c",(0,d.jsx)(r.code,{children:"r1==r2==42"})]}),"\n",(0,d.jsxs)(r.p,{children:["\u5728A->B->C->D \u987a\u5e8f\u4e0b, ",(0,d.jsx)(r.code,{children:"r1==r2==0"})]}),"\n",(0,d.jsx)(r.p,{children:"\u5982\u679c\u67d0\u4e2a\u64cd\u4f5c\u53ea\u8981\u6c42\u662f\u539f\u5b50\u64cd\u4f5c\uff0c\u9664\u6b64\u4e4b\u5916\uff0c\u4e0d\u9700\u8981\u5176\u5b83\u540c\u6b65\u7684\u4fdd\u969c\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528 Relaxed ordering\u3002\u7a0b\u5e8f\u8ba1\u6570\u5668\u662f\u4e00\u79cd\u5178\u578b\u7684\u5e94\u7528\u573a\u666f\uff1a"}),"\n",(0,d.jsx)(r.pre,{children:(0,d.jsx)(r.code,{className:"language-cpp",children:"#include <cassert>\n#include <vector>\n#include <iostream>\n#include <thread>\n#include <atomic>\nstd::atomic<int> cnt = {0};\nvoid f()\n{\n    for (int n = 0; n < 1000; ++n) {\n        cnt.fetch_add(1, std::memory_order_relaxed);\n    }\n}\nint main()\n{\n    std::vector<std::thread> v;\n    for (int n = 0; n < 10; ++n) {\n        v.emplace_back(f);\n    }\n    for (auto& t : v) {\n        t.join();\n    }\n    assert(cnt == 10000);    // never failed\n    return 0;\n}\n"})}),"\n",(0,d.jsx)(r.h3,{id:"memory-order-1",children:"memory order"}),"\n",(0,d.jsx)(r.p,{children:"c++11 atomic\u63d0\u4f9b\u4e866\u79cdmemory order\uff0c\u6765\u5728\u7f16\u7a0b\u8bed\u8a00\u5c42\u9762\u5bf9\u7f16\u8bd1\u5668\u548ccpu\u5b9e\u65bd\u7684\u91cd\u6392\u6307\u4ee4\u884c\u4e3a\u8fdb\u884c\u63a7\u5236"}),"\n",(0,d.jsxs)(r.ol,{children:["\n",(0,d.jsxs)(r.li,{children:["\n",(0,d.jsx)(r.p,{children:"memory_order_relaxed: \u65e0fencing\u4f5c\u7528\uff0ccpu\u548c\u7f16\u8bd1\u5668\u53ef\u4ee5\u91cd\u6392\u6307\u4ee4"}),"\n"]}),"\n",(0,d.jsxs)(r.li,{children:["\n",(0,d.jsx)(r.p,{children:"memory_order_consume: \u540e\u9762\u4f9d\u8d56\u6b64\u539f\u5b50\u53d8\u91cf\u7684\u8bbf\u5b58\u6307\u4ee4\u52ff\u91cd\u6392\u81f3\u6b64\u6761\u6307\u4ee4\u4e4b\u524d,\n\u6027\u80fd\u6bd4memory_order_acquire\u9ad8(\u5728c++26\u4e2d\u5df2\u5f03\u7528)"}),"\n"]}),"\n",(0,d.jsxs)(r.li,{children:["\n",(0,d.jsx)(r.p,{children:"memory_order_acquire: \u540e\u9762\u8bbf\u5b58\u6307\u4ee4\u7981\u6b62\u91cd\u6392\u81f3\u6b64\u6761\u6307\u4ee4\u4e4b\u524d"}),"\n"]}),"\n",(0,d.jsxs)(r.li,{children:["\n",(0,d.jsx)(r.p,{children:"memory_order_release: \u524d\u9762\u8bbf\u5b58\u6307\u4ee4\u7981\u6b62\u91cd\u6392\u5230\u6b64\u6761\u6307\u4ee4\u4e4b\u540e\u3002"}),"\n"]}),"\n",(0,d.jsxs)(r.li,{children:["\n",(0,d.jsx)(r.p,{children:"memory_order_acq_rel: memory_order_acquire + memory_order_release"}),"\n"]}),"\n",(0,d.jsxs)(r.li,{children:["\n",(0,d.jsx)(r.p,{children:"memory_order_seq_cst: memory_order_acq_rel + \u6240\u6709\u4f7f\u7528seq_cst\u7684\u6307\u4ee4\u6709\u4e25\u683c\u7684\u5168\u5e8f\u5173\u7cfb"}),"\n"]}),"\n"]}),"\n",(0,d.jsx)(r.p,{children:"\u591a\u7ebf\u7a0b\u7f16\u7a0b\u65f6\uff0c\u901a\u8fc7\u8fd9\u4e9b\u6807\u5fd7\u4f4d\uff0c\u6765\u8bfb\u5199\u539f\u5b50\u53d8\u91cf\uff0c\u53ef\u4ee5\u7ec4\u5408\u51fa4\u79cd\u540c\u6b65\u6a21\u578b\uff1a"}),"\n",(0,d.jsxs)(r.ul,{children:["\n",(0,d.jsxs)(r.li,{children:["\n",(0,d.jsx)(r.p,{children:"Relaxed ordering"}),"\n"]}),"\n",(0,d.jsxs)(r.li,{children:["\n",(0,d.jsx)(r.p,{children:"Release-Acquire ordering"}),"\n"]}),"\n",(0,d.jsxs)(r.li,{children:["\n",(0,d.jsx)(r.p,{children:"Release-Consume ordering"}),"\n"]}),"\n",(0,d.jsxs)(r.li,{children:["\n",(0,d.jsx)(r.p,{children:"Sequentially-consistent ordering"}),"\n"]}),"\n"]}),"\n",(0,d.jsx)(r.p,{children:"\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cstd::atomic\u4f7f\u7528\u7684\u662fSequentially-consistent ordering(\u6700\u4e25\u683c\u7684\u540c\u6b65\u6a21\u578b)\u3002\n\u4f46\u5728\u67d0\u4e9b\u573a\u666f\u4e0b\uff0c\u5408\u7406\u4f7f\u7528\u5176\u5b833\u79cdordering\uff0c\u53ef\u4ee5\u8ba9\u7f16\u8bd1\u5668\u4f18\u5316\u751f\u6210\u7684\u4ee3\u7801\uff0c\u4ece\u800c\u63d0\u9ad8\u6027\u80fd\u3002"}),"\n",(0,d.jsx)(r.h3,{id:"release-acquire-ordering",children:"Release-Acquire ordering"}),"\n",(0,d.jsx)(r.p,{children:"\u5728\u8fd9\u79cd\u6a21\u578b\u4e0b\uff0cstore()\u4f7f\u7528memory_order_release\uff0c\u800cload()\u4f7f\u7528memory_order_acquire\u3002\u8fd9\u79cd\u6a21\u578b\u6709\u4e24\u79cd\u6548\u679c\uff0c\u7b2c\u4e00\u79cd\u662f\u53ef\u4ee5\u9650\u5236 CPU \u6307\u4ee4\u7684\u91cd\u6392\uff1a"}),"\n",(0,d.jsxs)(r.ul,{children:["\n",(0,d.jsxs)(r.li,{children:["\n",(0,d.jsxs)(r.p,{children:["\u5728store()",(0,d.jsx)(r.strong,{children:"\u4e4b\u524d"}),"\u7684\u6240\u6709\u8bfb\u5199\u64cd\u4f5c(\u5305\u62ec\u975e\u539f\u5b50\u7684\u548cRelaxed atomic\u7684)\uff0c\u4e0d\u5141\u8bb8\u88ab\u79fb\u52a8\u5230\u8fd9\u4e2astore()\u7684\u540e\u9762\u3002 // write-release\u8bed\u4e49"]}),"\n"]}),"\n",(0,d.jsxs)(r.li,{children:["\n",(0,d.jsxs)(r.p,{children:["\u5728load()",(0,d.jsx)(r.strong,{children:"\u4e4b\u540e"}),"\u7684\u6240\u6709\u8bfb\u5199\u64cd\u4f5c(\u5305\u62ec\u975e\u539f\u5b50\u7684\u548cRelaxed atomic\u7684)\uff0c\u4e0d\u5141\u8bb8\u88ab\u79fb\u52a8\u5230\u8fd9\u4e2aload()\u7684\u524d\u9762\u3002 // read-acquire\u8bed\u4e49"]}),"\n"]}),"\n"]}),"\n",(0,d.jsx)(r.p,{children:(0,d.jsx)(r.strong,{children:"\u8be5\u6a21\u578b\u53ef\u4ee5\u4fdd\u8bc1\uff1a\u5982\u679cThread-1\u7684store()\u7684\u90a3\u4e2a\u503c\uff0c\u6210\u529f\u88abThread-2\u7684load()\u5230\u4e86\uff0c\u90a3\u4e48Thread-1\u5728store()\u4e4b\u524d\u5bf9\u5185\u5b58\u7684\u6240\u6709\u5199\u5165\u64cd\u4f5c\uff0c\u6b64\u65f6\u5bf9Thread-2\u6765\u8bf4\u90fd\u662f\u53ef\u89c1\u7684"})}),"\n",(0,d.jsx)(r.pre,{children:(0,d.jsx)(r.code,{className:"language-cpp",children:'#include <atomic>\n#include <cassert>\n#include <string>\n#include <thread>\n \nstd::atomic<std::string*> ptr;\nint data;\n \nvoid producer()\n{\n    std::string* p = new std::string("Hello");\n    data = 42;\n    ptr.store(p, std::memory_order_release);\n}\n \nvoid consumer()\n{\n    std::string* p2;\n    while (!(p2 = ptr.load(std::memory_order_acquire)))\n        ;\n    assert(*p2 == "Hello"); // never fires\n    assert(data == 42); // never fires\n}\n \nint main()\n{\n    std::thread t1(producer);\n    std::thread t2(consumer);\n    t1.join(); \n    t2.join();\n}\n'})}),"\n",(0,d.jsx)(r.h3,{id:"release-consume-ordering",children:"Release-Consume ordering"}),"\n",(0,d.jsx)(r.p,{children:(0,d.jsx)(r.strong,{children:"\u56e0\u4e3amemory_order_consume\u5728\u672a\u6765\u5df2\u88ab\u5f03\u7528\uff0c\u4e0d\u4ecb\u7ecd\u8be5\u8282"})}),"\n",(0,d.jsx)(r.h3,{id:"sequentially-consistent-ordering",children:"Sequentially-consistent ordering"})]})}function m(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,d.jsx)(r,{...e,children:(0,d.jsx)(a,{...e})}):a(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>s,x:()=>l});var d=n(6540);const i={},o=d.createContext(i);function s(e){const r=d.useContext(o);return d.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),d.createElement(o.Provider,{value:r},e.children)}}}]);