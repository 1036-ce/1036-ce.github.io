"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[954],{9867:(t,n,e)=>{e.r(n),e.d(n,{assets:()=>o,contentTitle:()=>r,default:()=>u,frontMatter:()=>d,metadata:()=>s,toc:()=>c});var i=e(4848),a=e(8453);const d={},r=void 0,s={id:"cpp/mutex",title:"mutex",description:"std::mutex",source:"@site/docs/cpp/mutex.md",sourceDirName:"cpp",slug:"/cpp/mutex",permalink:"/docs/cpp/mutex",draft:!1,unlisted:!1,editUrl:"https://github.com/1036-ce/1036-ce.github.io/blob/main/docs/cpp/mutex.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"little",permalink:"/docs/cpp/little"},next:{title:"new",permalink:"/docs/cpp/new"}},o={},c=[{value:"std::mutex",id:"stdmutex",level:2},{value:"more",id:"more",level:3},{value:"\u793a\u4f8b\u4ee3\u7801",id:"\u793a\u4f8b\u4ee3\u7801",level:3}];function l(t){const n={code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...t.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"stdmutex",children:"std::mutex"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"std::mutex"}),"\u548c",(0,i.jsx)(n.code,{children:"std::lock"}),"\u5b9a\u4e49\u5728\u5934\u6587\u4ef6",(0,i.jsx)(n.code,{children:"<mutex>"}),"\u4e2d"]}),"\n",(0,i.jsxs)(n.p,{children:["\u4f7f\u7528\u4e92\u65a5\u9501\u7684\u65b9\u6cd5\u4e4b\u4e00\u662f\u4f7f\u7528",(0,i.jsx)(n.code,{children:"lock()"}),"\u548c",(0,i.jsx)(n.code,{children:"unlock()"})]}),"\n",(0,i.jsxs)(n.p,{children:["\u4e5f\u53ef\u4ee5\u4f7f\u7528",(0,i.jsx)(n.code,{children:"std::lock_guard"}),"\uff0c\u5176\u4f7f\u7528RAII\u6a21\u5f0f\u7ba1\u7406\u9501\uff0c\u8be5\u6a21\u5f0f\u5728",(0,i.jsx)(n.code,{children:"std::lock_guard"}),"\u5bf9\u8c61\u9500\u6bc1\u65f6\u81ea\u52a8\u91ca\u653e\u9501"]}),"\n",(0,i.jsx)(n.h3,{id:"more",children:"more"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"shared_mutex: \u5141\u8bb8\u591a\u4e2a\u7ebf\u7a0b\u540c\u65f6\u62e5\u6709\u4e00\u4e2a\u4e92\u65a5\u91cf"}),"\n",(0,i.jsx)(n.li,{children:"recursive_mutex: \u5141\u8bb8\u591a\u4e2a\u7ebf\u7a0b\u5728\u4e00\u4e2a\u4e92\u65a5\u9501\u4e0a\u53e0\u52a0\u591a\u4e2a\u9501"}),"\n",(0,i.jsx)(n.li,{children:"timed_mutex: \u4e3a\u4e92\u65a5\u9501\u63d0\u4f9btimeout\u3002shared_mutex\u3001recursive_mutex \u4e5f\u6709\u5b9a\u65f6\u7248\u672c\u53ef\u7528"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"\u793a\u4f8b\u4ee3\u7801",children:"\u793a\u4f8b\u4ee3\u7801"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cpp",children:'#include <fmt/core.h>\n#include <future>\n#include <iostream>\n#include <list>\n#include <mutex>\n#include <optional>\n#include <string_view>\n\nusing namespace fmt;\n\nstd::mutex animal_mutex;\n\nclass Animal {\nprivate:\n\tusing friend_t = std::list<Animal>;\n\tstd::string_view s_name{"unk"};\n\tfriend_t l_friends{};\n\npublic:\n\tAnimal() = delete;\n\tAnimal(const std::string_view n) : s_name(n) {}\n\n\tbool operator==(const Animal &o) const {\n\t\treturn s_name.data() == o.s_name.data();\n\t}\n\n\tbool is_friend(const Animal &o) const {\n\t\tfor (const auto &a : l_friends) {\n\t\t\tif (a == o)\n\t\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tstd::optional<friend_t::iterator> find_friend(const Animal &o) noexcept {\n\t\tfor (auto it{l_friends.begin()}; it != l_friends.end(); ++it) {\n\t\t\tif (*it == o)\n\t\t\t\treturn it;\n\t\t}\n\t\treturn {};\n\t}\n\n\tvoid print() const noexcept {\n\t\tstd::lock_guard<std::mutex> l(animal_mutex);\n\t\t// animal_mutex.lock();\n\t\tauto n_animals{l_friends.size()};\n\t\tstd::cout << format("Animal: {}, friends: ", s_name);\n\t\tif (!n_animals)\n\t\t\tstd::cout << "none";\n\t\telse {\n\t\t\tfor (auto n : l_friends) {\n\t\t\t\tstd::cout << n.s_name;\n\t\t\t\tif (--n_animals)\n\t\t\t\t\tstd::cout << ", ";\n\t\t\t}\n\t\t}\n\t\tstd::cout << "\\n";\n\t\t// animal_mutex.unlock();\n\t}\n\n\tbool add_friend(Animal &o) noexcept {\n\t\tstd::cout << format("add_friend {} -> {}\\n", s_name, o.s_name);\n\t\tif (*this == o)\n\t\t\treturn false;\n\t\tstd::lock_guard<std::mutex> l(animal_mutex);\n\t\t// animal_mutex.lock();\n\t\tif (!is_friend(o))\n\t\t\tl_friends.emplace_back(o);\n\t\tif (!o.is_friend(*this))\n\t\t\to.l_friends.emplace_back(*this);\n\t\t// animal_mutex.unlock();\n\t\treturn true;\n\t}\n\n\tbool delete_friend(Animal &o) noexcept {\n\t\tstd::cout << format("delete_friend {} -> {}\\n", s_name, o.s_name);\n\t\tif (*this == o)\n\t\t\treturn false;\n\t\t// animal_mutex.lock();\n\t\tstd::lock_guard<std::mutex> l(animal_mutex);\n\t\tif (auto it = find_friend(o))\n\t\t\tl_friends.erase(it.value());\n\t\tif (auto it = o.find_friend(*this))\n\t\t\to.l_friends.erase(it.value());\n\t\t// animal_mutex.unlock();\n\t\treturn true;\n\t}\n};\n\nint main() {\n\tauto cat1    = std::make_unique<Animal>("cat");\n\tauto tiger1  = std::make_unique<Animal>("tiger");\n\tauto dog1    = std::make_unique<Animal>("dog");\n\tauto rabbit1 = std::make_unique<Animal>("rabbit");\n\n\tauto a1 = std::async([&] { cat1->add_friend(*tiger1); });\n\tauto a2 = std::async([&] { cat1->add_friend(*rabbit1); });\n\tauto a3 = std::async([&] { rabbit1->add_friend(*dog1); });\n\tauto a4 = std::async([&] { rabbit1->add_friend(*cat1); });\n\ta1.wait();\n\ta2.wait();\n\ta3.wait();\n\ta4.wait();\n\n\tauto p1 = std::async([&] { cat1->print(); });\n\tauto p2 = std::async([&] { tiger1->print(); });\n\tauto p3 = std::async([&] { dog1->print(); });\n\tauto p4 = std::async([&] { rabbit1->print(); });\n\tp1.wait();\n\tp2.wait();\n\tp3.wait();\n\tp4.wait();\n\n\tauto a5 = std::async([&] { cat1->delete_friend(*rabbit1); });\n\ta5.wait();\n\tauto p5 = std::async([&] { cat1->print(); });\n\tauto p6 = std::async([&] { rabbit1->print(); });\n\treturn 0;\n}\n\n// output:\n\n/* add_friend cat -> tiger\n * add_friend cat -> rabbit\n * add_friend rabbit -> dog\n * add_friend rabbit -> cat\n * Animal: cat, friends: tiger, rabbit\n * Animal: tiger, friends: cat\n * Animal: dog, friends: rabbit\n * Animal: rabbit, friends: cat, dog\n * delete_friend cat -> rabbit\n * Animal: cat, friends: tiger\n * Animal: rabbit, friends: dog */\n'})})]})}function u(t={}){const{wrapper:n}={...(0,a.R)(),...t.components};return n?(0,i.jsx)(n,{...t,children:(0,i.jsx)(l,{...t})}):l(t)}},8453:(t,n,e)=>{e.d(n,{R:()=>r,x:()=>s});var i=e(6540);const a={},d=i.createContext(a);function r(t){const n=i.useContext(d);return i.useMemo((function(){return"function"==typeof t?t(n):{...n,...t}}),[n,t])}function s(t){let n;return n=t.disableParentContext?"function"==typeof t.components?t.components(a):t.components||a:r(t.components),i.createElement(d.Provider,{value:n},t.children)}}}]);